<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


    <context:component-scan base-package="com.jasoet.ap3t.ui.springmvc.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- ini diperlukan kalau kita mapping DispatcherServlet ke / -->
    <!-- mengganti default servletnya Tomcat dan Jetty -->
    <!-- sehingga tetap bisa mengakses folder selain WEB-INF, misalnya img,
         css, js -->
    <mvc:default-servlet-handler/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
         up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Application Message Bundle -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages/messages"/>
        <property name="cacheSeconds" value="0"/>
    </bean>

    <!--Exception Mapping, Berguna untuk mengarahkan halaman ke halaman tertentu ketika eksepsi terjadi-->
    <!--  <mvc:view-controller path="/uncaughtException" view-name="exception/parent"/>
    <mvc:view-controller path="/accessDenied" view-name="exception/accessDenied"/>
    <mvc:view-controller path="/resourceNotFound" view-name="exception/parent"/>
    <mvc:view-controller path="/dataAccessFailure" view-name="exception/parent"/>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"
          p:defaultErrorView="exception/parent">
        <property name="exceptionMappings">
            <props>
                <prop key=".DataAccessException">dataAccessFailure</prop>
                <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
                <prop key=".TypeMismatchException">resourceNotFound</prop>
                <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
            </props>
        </property>
    </bean>-->

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views
         directory -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/layouts/layouts.xml</value>
                <value>/WEB-INF/views/views.xml</value>
                <!-- Scan views directory for Tiles configurations -->
                <value>/WEB-INF/views/**/views.xml</value>
            </list>
        </property>
    </bean>
    <!-- Forwards requests to the "/" resource to the "hello" view -->
    <mvc:view-controller path="/" view-name="redirect:/dashboard"/>


</beans>
